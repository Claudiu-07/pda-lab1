# 1

#include <iostream>
#include <string>
#include <chrono>
#include <thread>
#include <mutex>
#include <queue>
#include <ctime>
#include <cstdlib>


#define n_max 10


int mtx;
std::mutex mtx_mutex;
std::queue <int> q;
int nr_rand, item;

void produce(int item)
{
     std::cout <<"introducem in coada numarul "<<item<<" \n";
     std::this_thread::sleep_for(std::chrono::seconds(5));




}

void consume()
{
     std::cout <<"extragem din coada \n";
     std::this_thread::sleep_for(std::chrono::seconds(5));




}

void producer()
{
    while(true)
    {
        srand( time(0));
        item = rand()%100;
        produce(item);

        mtx_mutex.lock();
        if(q.size() < n_max)
           q.push(item);
        mtx_mutex.unlock();



    }
}


void consumer()
{
    while(true)
    {
       mtx_mutex.lock();
       if(q.size() > 0)
            q.pop();
        mtx_mutex.unlock();
        consume();




    }
}



int main()
{
    //mtx = 0;
    int i;
    for(i = 0;i<2;i++)
    {
        srand( time(0));
        item = rand()%100;
        std::cout <<"introducem in coada numarul "<<item<<"\n";
        q.push(item);

    }




    std::thread t1(producer);
    std::thread t2(consumer);
    t1.join();
    t2.join();
}
